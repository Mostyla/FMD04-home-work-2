import 'package:flutter_homework_2/home_work_1/user.dart';
import 'package:flutter_homework_2/home_work_1/user_data_repository.dart';

// Почему исходный код нарушал принцип единой ответственности?
// Какую роль выполнял класс User Manger?

// Ответ: Исходный код, содержал в себе информацию о пользователе, а именно имя и возраст
// Также у нас присутсвовали методы валидации, методы преобразования исходных данных, метод сохранения данных
// И все это происходило в одном классе, что не есть хорошо
// Каждый класс должен отвечать грубо говоря за себя, класс пользователя хранит в себе только информацию о пользователе
// Валидатор отвечает за валидацию введенных данных
// Репозиторий за сохранение и обработку данных - такой подход выглядит по моему мнению более корректным.

void main() {
   final user = User("Джонн", 5);
   final userRepository = UserRepository();
   userRepository.saveAndGetUserData(user);
}